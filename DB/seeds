CREATE TABLE users (
	id integer,
	name varchar,
	picture text,
	dog_owner varChar,
	provider_walker varChar,
	provider_sitter varChar(10),
	provider_boarder varChar(10),
	zip integer,
	short_desc varchar(255),
	bio TEXT,
	experience TEXT,
	dogs_are_on_walk boolean
);

create table user_auth (
	id serial primary key,
	email varchar,
	password text
)


CREATE TABLE dog (
	dog_id serial Primary Key,
	dog_name varchar,
	dog_age integer,
	dog_picture TEXT,
	breed varchar,
	weight integer,
	dog_gender varcahr(10),
	special_notes TEXT,
	owner_id INTEGER
	
);

CREATE TABLE owner_client (
	"owner_id" integer,
	"provider_id" integer,
	"client_request" varchar,
	"provider_approve" varchar
	
);

CREATE TABLE walk (
    walk_id serial Primary Key,
	provider_id integer,
	owner_id integer,
	owner_name, varchar,
	dog_id integer,
	start_time TIMESTAMP,
	end_time TIMESTAMP
	
);

CREATE TABLE review (
	"review_id" serial Primary Key,
	"rating" integer,
	"owner_id" integer,
	"provider_id" integer,
	"comment" TEXT,
	"date_time" TIMESTAMP
);

CREATE TABLE chat (
    chat_id serial primary key,
	room integer,
	user_name varChar,
	name varchar,
	message  TEXT,
	date_time TIMESTAMP
);

CREATE TABLE "session" (
 "sid" varchar NOT NULL COLLATE "default",
    "sess" json NOT NULL,
    "expire" timestamp(6) NOT NULL
)
WITH (OIDS=FALSE);
ALTER TABLE "session" ADD CONSTRAINT "session_pkey" PRIMARY KEY ("sid") NOT DEFERRABLE INITIALLY IMMEDIATE;


drop table if exists Chat

insert into dog (dog_name, breed, weight, special_notes, owner_id)
values ('Beacon', 'mix', '20', 'likes to play', 1); 

insert into owner_client (owner_id, provider_id, client_request, provider_approve)
values (1,2,'approved', 'approved')

insert into users (name, email, dog_owner, provider_walker, provider_sitter, provider_boarder, zip, short_desc, bio, experience)
values ('shonda', 'shonda@email.com', true, true, true, true, 84790, 'short desc', 'bio', 'experience')


select *, (
    select row_to_json(c)
    from (
        select *, (
            select coalesce(json_agg(d), '[]'::json)
            from (
                select *
                from dog
                where owner_id = u.id
            ) d
        ) as dogs
        from users u
        where id = o.owner_id
    ) c 
) as clients
from owner_client as o
where provider_id = 2;

select *, (
    select json_agg(c)
    from (
        select *, (
            select coalesce(json_agg(d), '[]'::json)
            from (
                select *
                from dog
                where owner_id = u.id
            ) d
        ) as dogs
        from users u
        where id = u.id
    ) c
) as clients
from users u
where id = 2